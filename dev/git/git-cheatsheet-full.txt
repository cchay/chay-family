Get Git client from: git-scm.com
Git hosting, if needed: github.com, gitlab.com
Get version info from command line: git --version
=================
ssh-keygen -t rsa -C “chay.c0.chris@gmail.com”
cat ~/.ssh/id_rsa.pub | clip
=================
One time LOCAL account setup:
User level:
git config --global user.name "cchay"
git config --global user.email "asdf@asdf.com"

System Level: git config --system
Project Level: git

Get Info:
git config user.name "cchay"
git config --list

=================
Start and create a local repository, go into the folder for the local repository:git init

*** configure local ignore list now BEFORE any adds

Track files: git add index.cfm
Track all files: git add -all

Mod the  files

Comment using vim: git commit -a
esc, :wq to save file

* Add to local repository: git commit -a -m "release build: comment"

Push branch to remote repository: git push origin nameOfBranch

=================
git status

git log
git log | more
* git log --oneline
git log shaBegin..shaEnd fileName

DIff of working set and repository: git diff
git diff index.cfm

Diff of locaBranch to remoteBranch: git diff LBN origin/RBN

*** get commit and changed files: git log --name-status

Show what was commited: git show --format=oneline specificSha

Compare working dir to staging: git diff
Compare staging to repo: git diff --cached (or --staged)
 
git diff sha..HEAD^ x.html

*** git diff --stat --summary sha..HEAD
*** git diff -b OR -w sha..HEAD

git diff --name-only SHA1 SHA2
git diff --name-only HEAD~10 HEAD~5
git diff-tree --no-commit-id --name-only -r bd61ad98
git show --pretty="format:" --name-only bd61ad98

=================
Basic workflow:

Checkout older/any version: git checkout qqqq index.cfm
Restore to latest checkin: git checkout HEAD index.cfm

=================
Tags:

Get list of tags: git tag
* Tag a code set: git tag -a nameOfTag -m "comment"

Change to tag: git checkout nameOfTag
Switch back to latest: git checkout HEAD

Delete local tag: git tag -D LocalTagName
Delete remote tag: git push --delete origin RemoteTagName

*** tags are NOT automtatically pushed/pulled

Push tags to remote repository: git push --tags
Get tags from remote repository: git pull --tags

=================
Branch:

Get list of local branches: git branch
Get list of remote branches: git fetch

Create a branch: git branch nameOfBranch
Push: git push --set-upstream NameOfBranch

Delete a local branch: git branch -d the_local_branch
Remove a remote branch: git push origin :the_remote_branch

Switch branches: git checkout nameOfBranch

Rename current lcoal branch: git branch -m NewBranchName
Rename another branch: git branch -m OldBranchName NewBranchName

=================
Merging:

Merging featureBranch to Master:
	Commit the feature branch
	switch to master: git checkout master

	Update the master branch

	Merge the feature branch to master: git merge nameOfFeatureBranch

	Push master to remote: git push origin master

git log -p zz..origin/zz
=========================
Rebasing (reapply changes of featureBranch to another branch)
	git checkout featureBranch
	git rebase release
	git checkout release
	git merge featureBranch
=========================

git diff --color-words x..y
Check if branch has another branch in it: git branch --merged

====================
Configuration:
Show branch name in prompt: git config

====================
Merging (FF):
Go to master: git merge FBN

No FF (makes new commit):
Go to master: git merge --no-ff FBN

Abort merge: git merge --abort

*** git log --graph --oneline --all --decorate

====================
Stashing:

Stash: git stash save "comment"

View stash: git stash list

Show Change: git stash show -p x.html

Load Stash: git stash apply|pop stash@{0}

Remove a stash: git stash drop stash@{0}

Remove all stash: git stash clear

To unapply: git stash show -p stash@{0} | git apply -R
====================
Remote:
git branch -r
git branch -a
====================
Self Hosting:
gitolite
=================
Pulling down code:

Pull down code set to another project location initially:
go to the folder: git clone git@gitlab.uscis.dhs.gov:did-it/cf_bcps.git

Pull down latest code (e.g., from TEST): git pull origin NameOfBranch
* (If there are files changed in that working copy: git checkout -- .

=================
Mistakes:

Fix uncomitted mistakes (revert to last commit): git reset --hard HEAD
or git clean -n OR -F
To unstage: git reset HEAD abc.html

To undo changes to working directory: git checkout

* can only undo last commit
Undo last commit: git commit --amend -m "comment"

Checkout old version of file to stage (!working directory): git checkout COMMITSHA -- abc.html

Move Head: git reset --soft | --mixed | --hard 
=================
.gitignore

# all files in specific dir
assets/

# ! ignore file (even if qualified to be ignored elsewhere)
!Application.ini

Ignore already tracked file: git rm --cached x.txt

=================
Misc:

Insert in Git Bash: "INSERT" key
Copy/Paset in Git Bash: "+" and "| clip"
cat + echo
cat ~/.ssh/id_rsa.pub | clip